/*! \file
    The Doxygen document for the main page.

    Copyright (C) 2007-2014 kaoru

    $Id$
*/

/*! \mainpage

What is Tetengo2? {#what_is_tetengo2}
=================

Tetengo2 is a kind of GUI toolkit.


Requirements {#requirements}
============

The libraries are available on Windows and UNIX-like systems.

The following features does not support UNIX-like systems yet...

 - tetengo2::config::persistent_config
 - tetengo2::text::encoding
 - tetengo2::gui

It's tested on the following systems:

- [Windows 7 Service Pack 1](http://www.microsoft.com/)
- [Debian GNU/Linux 7](http://www.debian.org/)
- [Cygwin 1.7 (x64)](http://www.cygwin.com/)


How to Build {#how_to_build}
============

Building on Windows
-------------------

You need the following tools in order to build Tetengo2:

- [Visual Studio 2013 Update 2](http://www.microsoft.com/) (including Express for Desktop)
- [Boost C++ Libraries 1.55.0](http://www.boost.org/)
- [Doxygen 1.8.7](http://www.doxygen.org) (to generate API documents)
- [Graphviz](http://www.graphviz.org) (to generate API documents)

You can obtain the source code either by downloading an archive or by cloning the Git repository.

### Downloading the Source Code Archive

The latest archives can be downloaded from [the web site](http://www.tetengo.org/).

### Cloning the Repository

You can clone the Git repository like this:

~~~~{.sh}
$ git clone https://github.com/kaorut/tetengo2.git
~~~~

### Build Sequence

First make a copy of `tetengo2_config.h-original` in the top source directory and name it `tetengo2_config.h`.
Edit `tetengo2_config.h` according to your environment.

Open `tetengo2.sln` with Visual Studio and build the solution in order to build Tetengo2 and run the unit tests.

To generate API documents, open Command Prompt and run `doxygen` command in the top source directory:

~~~~{.bat}
X:\path\to\tetengo2> doxygen
~~~~

Building on UNIX
----------------

You need the following tools in order to build Tetengo2 libraries:

- [GCC 4.7.2 or 4.8.2](http://www.gnu.org/)
- [GNU Make](http://www.gnu.org/)
- [Boost C++ Libraries 1.55.0](http://www.boost.org/)
- [Doxygen 1.8.7](http://www.doxygen.org) (to generate API documents)
- [Graphviz](http://www.graphviz.org) (to generate API documents)

You can obtain the source code either by downloading an archive or by cloning the Git repository.

### Downloading the Source Code Archive

The latest archives can be downloaded from [the web site](http://www.tetengo.org/).

### Cloning the Repository

You can clone the Git repository like this:

~~~~{.sh}
$ git clone https://github.com/kaorut/bobura.git
~~~~

Run `bootstrap.sh` to produce the `configure` script:

~~~~{.sh}
$ ./bootstrap.sh
~~~~

`bootstrap.sh` requires the following tools:

- [Autotools (Autoconf, Automake, etc.)](http://www.gnu.org/)
- [Autoconf Archive](http://www.gnu.org/)

### Build Sequence

Run `configure` to generate Makefiles. `--enable-precompilation` enables precompilation by generating `.gch` files.
On some platform such as Linux, you have to link to librt.

~~~~{.sh}
$ ./configure [--enable-precompilation] [LIBS=-lrt]
~~~~

To install the libraries to your system, run make like this:

~~~~{.sh}
$ make
$ sudo make install
~~~~

The following instruction tests the Tetengo2 libraries:

~~~~{.sh}
$ make check
~~~~

The API documents are generated by the following:

~~~~{.sh}
$ make doc
~~~~


------------------------------------------------------------------------------

Copyright (C) 2007-2014 kaoru

<http://www.tetengo.org/>

$Id$

*/
