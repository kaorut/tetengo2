/*! \file
    The Doxygen document for the main page.

    Copyright (C) 2007-2019 kaoru

    $Id$
*/

/*! \mainpage

What is Tetengo2?
=================

Tetengo2 is a kind of GUI toolkit.


Requirements
============

The libraries are available on Windows and UNIX-like systems.

The following features does not support UNIX-like systems yet...

 - tetengo2::gui

It's tested on the following systems:

- [Windows 10](https://www.microsoft.com/)
- [Debian GNU/Linux 9](https://www.debian.org/)


How to Build
============

Building on Windows
-------------------

You need the following tools in order to build Tetengo2:

- [Visual Studio 2017 15.9](https://www.microsoft.com/)
- [Boost C++ Libraries 1.69.0](https://www.boost.org/)
- Windows Subsystem for Linux
  - [GNU Make](https://www.gnu.org/)
  - [include-what-you-use 3.9](https://include-what-you-use.org/)
  - [ClangFormat 5.0](https://clang.llvm.org/docs/ClangFormat.html)
  - [Dos2Unix](https://waterlan.home.xs4all.nl/dos2unix.html)
  - [Doxygen 1.8.15](http://www.doxygen.nl)
  - [Graphviz](https://www.graphviz.org)

You can obtain the source code either by downloading an archive or by cloning the Git repository.

### Downloading the Source Code Archive

The latest archives can be downloaded from [the web site](https://www.tetengo.org/).

### Cloning the Repository

You can clone the Git repository like this:

~~~~{.sh}
$ git clone https://github.com/kaorut/tetengo2.git
~~~~

### Build Sequence

First make a copy of `tetengo2_config.h-original` in the top source directory and name it `tetengo2_config.h`.
Edit `tetengo2_config.h` according to your environment.

Open `tetengo2.sln` with Visual Studio and build the solution in order to build Tetengo2 and run the unit tests.

To generate API documents, open Command Prompt and run `doxygen` command in the top source directory:

~~~~{.bat}
X:\path\to\tetengo2> doxygen
~~~~

Building on UNIX
----------------

You need the following tools in order to build Tetengo2 libraries:

- [GCC 6.3.0](https://www.gnu.org/) or [Clang 5.0](https://clang.llvm.org/)
- [GNU Make](https://www.gnu.org/)
- [Boost C++ Libraries 1.69.0](https://www.boost.org/)
- [include-what-you-use 3.9](https://include-what-you-use.org/)
- [ClangFormat 5.0](https://clang.llvm.org/docs/ClangFormat.html)
- [Dos2Unix](https://waterlan.home.xs4all.nl/dos2unix.html)
- [Doxygen 1.8.15](http://www.doxygen.nl)
- [Graphviz](https://www.graphviz.org)

You can obtain the source code either by downloading an archive or by cloning the Git repository.

### Downloading the Source Code Archive

The latest archives can be downloaded from [the web site](https://www.tetengo.org/).

### Cloning the Repository

You can clone the Git repository like this:

~~~~{.sh}
$ git clone https://github.com/kaorut/tetengo2.git
~~~~

Run `bootstrap.sh` to produce the `configure` script:

~~~~{.sh}
$ ./bootstrap.sh
~~~~

`bootstrap.sh` requires the following tools:

- [Autotools (Autoconf, Automake, etc.)](https://www.gnu.org/)
- [Autoconf Archive](https://www.gnu.org/)

### Build Sequence

Run `configure` to generate Makefiles. `--enable-precompilation` enables precompilation.

~~~~{.sh}
$ ./configure [--enable-precompilation]
~~~~

To install the libraries to your system, run make like this:

~~~~{.sh}
$ make
$ sudo make install
~~~~

The following instruction tests the Tetengo2 libraries:

~~~~{.sh}
$ make check
~~~~

The API documents are generated by the following:

~~~~{.sh}
$ make doc
~~~~


------------------------------------------------------------------------------

Copyright (C) 2007-2019 kaoru

<https://www.tetengo.org/>

$Id$

*/
